---
source: crates/printer/src/operation_type_printer/tests/mod.rs
expression: printed
---
import type { TypedDocumentNode } from "@graphql-typed-document-node/core";
import type * as Schema from "";

type QueryResult = Schema.__SelectionSet<Schema.Query, {
  me: Schema.__SelectionSet<Schema.User, {
    id: Schema.ID;
    name: Schema.String;
    type: Schema.UserType;
    age: Schema.Int | null;
    posts: (Schema.__SelectionSet<Schema.User, {
      id: Schema.ID;
      id: Schema.ID;
    }, {}> | Schema.__SelectionSet<Schema.Bot, {
      id: Schema.ID;
      id: Schema.ID;
    }, {}> | Schema.__SelectionSet<Schema.Post, {
      id: Schema.ID;
      id: Schema.ID;
      title: Schema.String;
      body: Schema.String;
    }, {}>)[];
  }, {}>;
}, {}>;

type QueryVariables = {};

declare const Query: TypedDocumentNode<QueryResult, QueryVariables>;

export { Query as default };

export type F = Schema.__SelectionSet<Schema.User, {
  id: Schema.ID;
}, {}> | Schema.__SelectionSet<Schema.Bot, {
  id: Schema.ID;
}, {}> | Schema.__SelectionSet<Schema.Post, {
  id: Schema.ID;
}, {}>;

export type P = Schema.__SelectionSet<Schema.Post, {
  title: Schema.String;
  body: Schema.String;
}, {}>;


