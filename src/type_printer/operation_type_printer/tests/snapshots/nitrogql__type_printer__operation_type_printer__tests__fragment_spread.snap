---
source: src/type_printer/operation_type_printer/tests/mod.rs
expression: printed
---
import type { TypedDocumentNode } from "@graphql-typed-document-node/core";
import type * as Schema from "";

type Query = Schema.__SelectionSet<Schema.Query, {
  me: Schema.__SelectionField<Schema.Query, "me"> extends infer __1
    ? Schema.__SelectionSet<__1, {
      id: Schema.__SelectionField<__1, "id">;
      name: Schema.__SelectionField<__1, "name">;
      type: Schema.__SelectionField<__1, "type">;
      age: Schema.__SelectionField<__1, "age">;
      posts: Schema.__SelectionField<__1, "posts"> extends infer __1
        ? Schema.__SelectionSet<__1, {
          id: Schema.__SelectionField<__1, "id">;
        } & F>
        : unknown;
    }>
    : unknown;
}>;

type Variables = {};

export const Query: TypedDocumentNode<Query, Variables>;

export type F = Schema.__SelectionSet<Schema.HasId, {
  id: Schema.__SelectionField<Schema.HasId, "id">;
}>;


